# Generated by Django 2.1.5 on 2019-04-12 08:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('monitor', '0004_auto_20190329_1514'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('step', models.SmallIntegerField(default=1, help_text='当trigger触发次数小于这个值时就执行这条记录里报警方式', verbose_name='第n次告警')),
                ('action_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('script', 'RunScript')], default='email', max_length=64, verbose_name='动作类型')),
                ('msg_format', models.TextField(default='Host({hostname},{ip}) service({service_name}) has issue,msg:{msg}', verbose_name='消息格式')),
                ('notifiers', models.ManyToManyField(blank=True, to='monitor.Userprofile', verbose_name='通知对象')),
            ],
        ),
        migrations.CreateModel(
            name='Actions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('interval', models.IntegerField(default=300, verbose_name='告警间隔(s)')),
                ('recover_notice', models.BooleanField(default=True, verbose_name='故障恢复后发送通知')),
                ('recover_subject', models.CharField(blank=True, max_length=128, null=True)),
                ('recover_message', models.TextField(blank=True, null=True)),
                ('enable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specificed_index_key', models.CharField(blank=True, max_length=64, null=True, verbose_name='只监控专门指定的指标key')),
                ('operator_type', models.CharField(choices=[('equal', '='), ('lt', '>'), ('st', '<')], max_length=32, verbose_name='运算符')),
                ('data_calculator_func', models.CharField(choices=[('avg', 'Average'), ('max', 'Max'), ('hit', 'Hit'), ('last', 'Last')], max_length=64, verbose_name='数据处理方式')),
                ('data_calculator_args', models.CharField(help_text='若是多个参数，则用，号分开，第一个值是时间', max_length=64, verbose_name='函数传入参数')),
                ('threshold', models.IntegerField(verbose_name='阈值')),
                ('logic_type', models.CharField(blank=True, choices=[('or', 'OR'), ('and', 'AND')], max_length=32, null=True, verbose_name='条件逻辑关系')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.Services', verbose_name='关联服务')),
                ('service_index', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.ServiceIndex', verbose_name='关联服务指标')),
            ],
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='触发器名称')),
                ('trigger_level', models.IntegerField(choices=[(1, 'Information'), (2, 'Warning'), (3, 'Average'), (4, 'High'), (5, 'Diaster')], verbose_name='告警级别')),
                ('enable', models.BooleanField(default=True)),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
        ),
        migrations.AlterField(
            model_name='host',
            name='status',
            field=models.IntegerField(choices=[(0, 'Online'), (1, 'Offline'), (2, 'Error'), (3, 'Down'), (4, 'Unreachable')], default=0, verbose_name='状态'),
        ),
        migrations.AddField(
            model_name='strategy',
            name='trigger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.Trigger', verbose_name='所属触发器'),
        ),
        migrations.AddField(
            model_name='actions',
            name='hosts',
            field=models.ManyToManyField(blank=True, to='monitor.Host'),
        ),
        migrations.AddField(
            model_name='actions',
            name='operation',
            field=models.ManyToManyField(to='monitor.Actions'),
        ),
        migrations.AddField(
            model_name='actions',
            name='triggers',
            field=models.ManyToManyField(blank=True, help_text='触发哪些报警策略', to='monitor.Trigger'),
        ),
    ]
